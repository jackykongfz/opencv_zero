#include<opencv2\opencv.hpp>
#include<opencv2\core\core.hpp>
#include<opencv2/highgui/highgui.hpp>
#include<iostream>

using namespace std;
using namespace cv;

int g_nContrastValue;//对比度
int g_nBrightValue;//亮度值
Mat g_srcImage, g_dstImage;

void on_ContrastAndBright(int, void*)
{
	for (int i = 0; i < g_srcImage.rows; i++)
	{
		for (int j = 0; j < g_srcImage.cols; j++)
		{
			for (int c = 0; c < 3; c++)
			{
				g_dstImage.at<Vec3b>(i, j)[c] = saturate_cast<uchar>((g_nContrastValue*0.01)*(g_srcImage.at<Vec3b>(i, j)[c]) + g_nBrightValue);
				//saturate_cast<uchar>是溢出保护，大于255就输出255，小于0输出0
			}
		}
	}

	imshow("原始图窗口", g_srcImage);
	imshow("变换图", g_dstImage);
}

int main()
{
	g_srcImage = imread("1.jpg");
	if (!g_srcImage.data){ printf("failed to open"); };
	g_dstImage = Mat::zeros(g_srcImage.size(), g_srcImage.type());
	g_nBrightValue = 80;
	g_nContrastValue = 80;
	namedWindow("原始图窗口", 1);
	namedWindow("变换图", 1);

	createTrackbar("对比度", "变换图", &g_nContrastValue, 300, on_ContrastAndBright);
	createTrackbar("亮度", "变换图", &g_nBrightValue, 200, on_ContrastAndBright);

	on_ContrastAndBright(g_nContrastValue, 0);
	on_ContrastAndBright(g_nBrightValue, 0);

	while (char(waitKey(1) != 'q')){}
	return 0;
}
