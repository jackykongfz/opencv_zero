#include<opencv2/highgui/highgui.hpp>
#include<opencv2/imgproc/imgproc.hpp>
#include<iostream>

using namespace std;
using namespace cv;

int main()
{
	//载入原图并显示
	Mat srcImage = imread("1.jpg");
	if (!srcImage.data){ printf("imread failed"); };
	imshow("原图", srcImage);

	//定义变量
	Mat dstHist;
	int dims = 1;
	float hranges[] = { 0, 255 };
	const float *ranges[] = { hranges };
	int size = 256;
	int channels = 2;  //计算红色通道的直方图

	//计算图像的直方图
	calcHist(&srcImage,1, &channels, Mat(), dstHist,dims, &size, ranges);
	
	Mat dstImage(size, size, CV_8U, Scalar(0));
	
	//获取最大值和最小值
	double minValue = 0;
	double maxValue = 0;
	minMaxLoc(dstHist, &minValue, &maxValue, 0, 0);

	//绘制直方图
	int hpt = saturate_cast<int>(0.9*size);
	for (int i = 0; i < size; i++)
	{
		float binValue = dstHist.at<float>(i);
		//hist 中是float类型

		int realValue = saturate_cast<int>(binValue * hpt / maxValue);
		rectangle(dstImage, Point(i, size - 1), Point((i + 1) - 1, size - realValue), Scalar(255));
		printf("%d\t", realValue);
	}
	imshow("直方图", dstImage);
	waitKey(0);

}
